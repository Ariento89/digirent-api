version: '3.7'

services:
    digirentdb:
        image: mdillon/postgis:11-alpine
        container_name: digirentdb
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        ports:
            - "5432:5432"
        env_file: 
            - env/.db.env
    digirent:
        build:
            context: .
            dockerfile: dockerfile
        container_name: digirent
        volumes:
            - .:/src/digirent/
        ports:
            - "5000:5000"
        env_file:
            - env/.env.dev
        depends_on:
            - digirentdb
        command: ["uvicorn", "digirent.web_app:app", "--host", "0.0.0.0", "--port", "5000", "--reload"]
    digirent-pgadmin:
        container_name: digirent-pgadmin
        image: dpage/pgadmin4
        env_file: 
            - env/.pgadmin.env
        ports:
            - "5050:80"
        depends_on:
            - digirentdb
    digirent-redis:
        container_name: digirent-redis
        image: redis:6.0.9-alpine
    digirent-rent-worker:
        container_name: digirent-rent-worker
        build:
            context: .
            dockerfile: dockerfile
        volumes:
            - .:/src/digirent/
        env_file:
            - env/.env.dev
        depends_on:
            - digirentdb
            - digirent-redis 
        command: bash -c "export APP_ENV=dev && celery --app=digirent.worker.app:app worker -Q rent-queue -l info"
    digirent-subscription-worker:
        container_name: digirent-subscription-worker
        build:
            context: .
            dockerfile: dockerfile
        volumes:
            - .:/src/digirent/
        env_file:
            - env/.env.dev
        depends_on:
            - digirentdb
            - digirent-redis
        command: bash -c "export APP_ENV=dev && celery --app=digirent.worker.app:app worker -Q subscription-queue -l info"
    digirent-beat:
        container_name: digirent-beat
        build:
            context: .
            dockerfile: dockerfile
        volumes:
            - .:/src/digirent/
        env_file:
            - env/.env.dev
        depends_on:
            - digirent-subscription-worker
            - digirent-rent-worker
        command: bash -c "export APP_ENV=dev && celery --app=digirent.worker.app:app beat -l info"

volumes: 
    postgres_data:
