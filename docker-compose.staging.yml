version: '3.7'

services:
    digirentdb:
        image: mdillon/postgis:11-alpine
        container_name: digirentdb
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        expose:
            - "5432"
        env_file: 
            - env/.db.staging.env
        restart: unless-stopped
    digirent-api:
        image: ghcr.io/ariento89/digirent-api:staging
        container_name: digirent-api
        expose:
            - "5000"
        env_file:
            - env/.staging.env
        depends_on:
            - digirentdb
        restart: unless-stopped
        command: ["uvicorn", "digirent.web_app:app", "--host", "0.0.0.0", "--port", "5000"]
    digirent-redis:
        container_name: digirent-redis
        image: redis:6.0.9-alpine
    digirent-rent-worker:
        image: ghcr.io/ariento89/digirent-api:staging
        container_name: digirent-rent-worker
        env_file:
            - env/.staging.env
        depends_on:
            - digirentdb
            - digirent-redis 
        command: ["celery", "--app=digirent.worker.app:app", "worker", "-Q", "rent-queue", "-l", "info"]
    digirent-subscription-worker:
        image: ghcr.io/ariento89/digirent-api:staging
        container_name: digirent-subscription-worker
        env_file:
            - env/.staging.env
        depends_on:
            - digirentdb
            - digirent-redis
        command: ["celery", "--app=digirent.worker.app:app", "worker", "-Q", "subscription-queue", "-l", "info"]
    digirent-beat:
        image: ghcr.io/ariento89/digirent-api:staging
        container_name: digirent-beat
        env_file:
            - env/.staging.env
        depends_on:
            - digirent-subscription-worker
            - digirent-rent-worker
        command: ["celery", "--app=digirent.worker.app:app", "beat", "-l", "info"]
    digirent-app:
        image: ghcr.io/ariento89/digirent-app:staging
        container_name: digirent-app
        expose:
            - "3000"
        depends_on:
            - digirent-api
        env_file:
            - env/.web.staging.env
        command: bash -c "yarn start"
        restart: unless-stopped
    digirent-nginx:
        image: nginx:mainline-alpine
        container_name: digirent-nginx
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./nginx:/etc/nginx/conf.d
        depends_on:
            - digirent-api
            - digirent-app    
   
volumes:
    postgres_data:
